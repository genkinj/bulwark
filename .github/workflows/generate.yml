name: Generate Content

on:
  repository_dispatch:
    types: [run]

env:
  token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  generate:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # 添加 permissions 配置
    permissions:
      id-token: write  # 允许写入 id-token
      contents: write  # 允许写入内容
      pages: write     # 允许写入 pages
      deployments: write  # 允许写入部署

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt
         
      - name: Run generate.py
        run: |
          python3 scripts/generate.py
          python3 scripts/github.py

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.143.1'  # 使用你当前使用的 Hugo 版本
          extended: true

      - name: Build with Hugo
        run: hugo --minify
      
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Commit and push changes
        run: |
          git config --global user.name "zhigehe"
          git config --global user.email "17086898389@163.com"
          git add .
          git commit -m "$(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M')"
          git pull --rebase origin dev
          git push origin dev

      - name: Check and merge to main
        run: |
          main_last_commit=$(git log -1 --format=%ct origin/main)
          current_time=$(date +%s)
          time_diff=$((current_time - main_last_commit))
          
          if [ $time_diff -gt 3600 ]; then
            echo "Main branch is older than 1 hour, merging dev to main..."
            git fetch origin main
            git checkout main
            git merge dev --no-ff -m "Merge dev to main at $(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M')"
            git push origin main
          else
            echo "Main branch is up to date, skipping merge."
          fi